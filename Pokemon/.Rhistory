library(grid)
library(gridExtra)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
type_1_poke <- ggplot(data= pokemon_data, aes(pokemon_data$Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
type_2_poke <- ggplot(data= pokemon_data, aes(pokemon_data$Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
grid.arrange(type_1_poke, type_2_poke, ncol=2)
type_1_poke <- ggplot(data= pokemon_data, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
type_2_poke <- ggplot(data= pokemon_data, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(pokemon_data)
View(pokemon_data)
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
View(grp_legendary)
View(grp_legendary)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
pokemon_data(-c(pokemon_data$Legendary=="TRUE"))
pokemon_data(-c(Legendary=="TRUE"))
pokemon_data[-c(pokemon_data$Legendary=="TRUE")]
test <- pokemon_data[-c(pokemon_data$Legendary=="TRUE")]
View(test)
View(test)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
test <- pokemon_data[,-c(pokemon_data$Legendary=="TRUE")]
View(test)
View(test)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
View(grp_legendary)
View(grp_legendary)
View(grp_normal)
View(grp_normal)
remove(grp_normal)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
?grepl
grp_mega_evols <- subset(pokemon_data, grepl("Mega", pokemon_data$Name, fixed = TRUE))
View(grp_mega_evols)
View(grp_mega_evols)
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
View(grp_mega_evols)
View(grp_mega_evols)
?gsub
grp_mega_evols <= gsub("^.*?Mega", "", grp_mega_evols$Name)
View(grp_mega_evols)
View(grp_mega_evols)
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
grp_mega_evols <= gsub("^.*?Mega", "", grp_mega_evols$Name)
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
grp_mega_evols <= gsub("^.*?Mega", "Mega", grp_mega_evols$Name)
View(grp_mega_evols)
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
test <= gsub("^.*?Mega", "Mega", grp_mega_evols$Name)
test <- gsub("^.*?Mega", "Mega", grp_mega_evols$Name)
install.packages("textclean")
test <- gsub("^.*?Mega", "Mega", grp_mega_evols$Name)
View(grp_mega_evols)
View(grp_mega_evols)
grp_mega_evols[,1] <- test
View(grp_mega_evols)
View(grp_mega_evols)
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,1] <- el_str
remove(el_str)
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
# type_1_poke <- ggplot(data= pokemon_data, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
#
# type_2_poke <- ggplot(data= pokemon_data, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
#
# grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(grp_legendary)
View(grp_legendary)
View(grp_normal)
View(grp_normal)
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,1] <- el_str
View(pokemon_data)
View(pokemon_data)
el_str <- gsub("[^A-za-z]", "", pokemon_data$Name)
pokemon_data[,1] <- el_str
View(pokemon_data)
View(pokemon_data)
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,1] <- el_str
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
View(pokemon_data)
View(pokemon_data)
el_str <- gsub("[^A-za-z]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
el_str <- gsub("[^A-za-z] ", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(el_str)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved form. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
# type_1_poke <- ggplot(data= pokemon_data, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
#
# type_2_poke <- ggplot(data= pokemon_data, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
#
# grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(pokemon_data)
View(pokemon_data)
View(grp_normal)
View(grp_normal)
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
View(pokemon_data)
View(pokemon_data)
el_str <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(el_str)
View(pokemon_data)
View(pokemon_data)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved form. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_normal <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
View(grp_normal)
View(grp_normal)
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
#open required packages
library(ggplot2)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
el_str <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(el_str)
View(pokemon_data)
View(pokemon_data)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" && duplicated(pokemon_data$X.))
View(grp_form1)
View(grp_form1)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" && duplicated(pokemon_data$X., incomparables = FALSE))
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, duplicated(pokemon_data$X., incomparables = FALSE))
View(grp_form1)
View(grp_form1)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & duplicated(pokemon_data$X., incomparables = FALSE))
View(grp_form1)
View(grp_form1)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
install.packages("tidyverse")
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
el_str <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
el_str <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(el_str)
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
duplicated(grp_form1)
duplicated(grp_form1$X.)
elim[duplicated(grp_form1$X.)]
duplicated(grp_form1$X.)
elim = data.frame()
elim[duplicated(grp_form1$X.)]
elim <- duplicated(grp_form1$X.)
elim <- !duplicated(grp_form1$X.)
duplicated(grp_form1$X.)
elim <- !duplicated(grp_form1$X.)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
elim <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
elim <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(elim)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
duplicated(grp_form1$X.)
grp_form1[!duplicated(grp_form1$X.)]
grp_form1[!duplicated(grp_form1$X.),]
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
elim <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- el_str
elim <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- el_str
remove(elim)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
# type_1_poke <- ggplot(data= pokemon_data, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
#
# type_2_poke <- ggplot(data= pokemon_data, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
#
# grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(pokemon_data)
View(pokemon_data)
View(grp_form1)
View(grp_form1)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
elim <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- elim
elim <- gsub("[^A-za-z ]", "", pokemon_data$Name)
pokemon_data[,2] <- elim
remove(elim)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE")
grp_legendary <- subset(pokemon_data, pokemon_data$Legendary=="TRUE")
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
# type_1_poke <- ggplot(data= pokemon_data, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
#
# type_2_poke <- ggplot(data= pokemon_data, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
#
# grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(pokemon_data)
View(pokemon_data)
type_1_poke <- ggplot(data= grp_form1, aes(Type.1)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-1") + coord_flip()
type_2_poke <- ggplot(data= grp_form1, aes(Type.2)) + geom_bar(aes(fill=..count..), alpha=0.8) + theme(axis.text.x = element_text(angle = 90, hjust = 0)) + ggtitle("Distribution Based on Type-2") + coord_flip()
grid.arrange(type_1_poke, type_2_poke, ncol=2)
View(grp_form1)
View(grp_form1)
View(grp_form1)
View(grp_form1)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
pokemon_data <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
pokemon_data[] <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
pokemon_data[] <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
View(pokemon_data)
View(pokemon_data)
#creating temporary set to store cleaned Names and then replacing the base text with the same. Deleting temeporary set to
#remove unncessary variables at runtime.
pokemon_data[,2] <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
View(pokemon_data)
View(pokemon_data)
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
#creating independeant datasets and cleaning them to remove incorrect values. There are no missing values present in the
#dataset. There are blank values present in the set which will be awarded a value of 0 as they cannot be filled with anything
#else.
#cleaning Pokemon names
pokemon_data[,2] <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- gsub("[^A-za-z ]", "", pokemon_data$Name)
View(pokemon_data)
View(pokemon_data)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE", grepl("Mega ", pokemon_data$Name, fixed = TRUE))
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & grepl("Mega ", pokemon_data$Name, fixed = TRUE))
View(grp_form1)
View(grp_form1)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & grepl("Mega ", pokemon_data$Name, fixed = FALSE))
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & grepl("Mega ", pokemon_data$Name, fixed = FALSE))
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
View(grp_form1)
View(grp_form1)
View(grp_mega_evols)
View(grp_mega_evols)
View(grp_mega_evols)
View(grp_mega_evols)
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.z
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & !grepl("Mega ", pokemon_data$Name, fixed = TRUE))
grp_mega_evols <- subset(pokemon_data, grepl("Mega ", pokemon_data$Name, fixed = TRUE))
View(grp_form1)
View(grp_form1)
#importing a second file whicg contains evolutionl list for all Pokemon.
pokemon_evolution <- read.csv("pokemon_species.csv")
#importing a second file whicg contains evolutionl list for all Pokemon.
pokemon_evolution <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_species.csv")
#importing a second file whicg contains evolutionl list for all Pokemon.
pokemon_species <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_species.csv")
#open required packages
library(ggplot2)
library(tidyverse)
library(grid)
library(gridExtra)
#opening dataset and printing summary of dataset
pokemon_data <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_stats.csv")
summary(pokemon_data)
pokemon_data[,2] <- gsub("^.*?Mega", "Mega", pokemon_data$Name)
pokemon_data[,2] <- gsub("[^A-za-z ]", "", pokemon_data$Name)
#importing a second file whicg contains evolutionl list for all Pokemon.
pokemon_species <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_species.csv")
View(pokemon_species)
View(pokemon_species)
summary(pokemon_species)
#importing a second file whicg contains evolutionl list for all Pokemon.
pokemon_species <- read.csv("C:/Users/gvign/Downloads/Documents/FIT5147/Project 1/pokemon/pokemon_species.csv")
summary(pokemon_species)
#replacing NA's with 0's
pokemon_species$evolves_from_species_id[is.na(pokemon_species$evolves_from_species_id)] <- 0
View(pokemon_species)
View(pokemon_species)
View(pokemon_data)
View(pokemon_data)
pokemon_data$evolved_from <- pokemon_species$evolves_from_species_id
View(pokemon_species)
View(pokemon_species)
View(pokemon_data)
View(pokemon_data)
#replacing NA's with 0's. 0 indicates base form
pokemon_species$evolves_from_species_id[is.na(pokemon_species$evolves_from_species_id)] <- 0
pokemon_data$evolved_from <- pokemon_species$evolves_from_species_id
#splitting main data of Pokemon into sets based on their evolution to better perform operations on them. Each Pokemon has
#a base form and an evolved form or even 2 evolved forms. Certain Pokemon also have Mega Evolution forms based on X or Y
#evolution  stone.
grp_form1 <- subset(pokemon_data, pokemon_data$Legendary=="FALSE" & !grepl("Mega ", pokemon_data$Name, fixed = TRUE))
View(grp_form1)
View(grp_form1)
View(pokemon_species)
View(pokemon_species)
View(pokemon_data)
View(pokemon_data)
